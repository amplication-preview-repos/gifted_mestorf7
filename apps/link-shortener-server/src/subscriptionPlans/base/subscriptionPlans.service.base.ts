/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SubscriptionPlans as PrismaSubscriptionPlans,
} from "@prisma/client";
import { SubscriptionPlansCreateInput } from "./SubscriptionPlansCreateInput";
import { SubscriptionPlans } from "./SubscriptionPlans";

export class SubscriptionPlansServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SubscriptionPlansCountArgs, "select">
  ): Promise<number> {
    return this.prisma.subscriptionPlans.count(args);
  }

  async subscriptionPlansItems(
    args: Prisma.SubscriptionPlansFindManyArgs
  ): Promise<PrismaSubscriptionPlans[]> {
    return this.prisma.subscriptionPlans.findMany(args);
  }
  async subscriptionPlans(
    args: Prisma.SubscriptionPlansFindUniqueArgs
  ): Promise<PrismaSubscriptionPlans | null> {
    return this.prisma.subscriptionPlans.findUnique(args);
  }
  async createSubscriptionPlans(
    args: Prisma.SubscriptionPlansCreateArgs
  ): Promise<PrismaSubscriptionPlans> {
    return this.prisma.subscriptionPlans.create(args);
  }
  async updateSubscriptionPlans(
    args: Prisma.SubscriptionPlansUpdateArgs
  ): Promise<PrismaSubscriptionPlans> {
    return this.prisma.subscriptionPlans.update(args);
  }
  async deleteSubscriptionPlans(
    args: Prisma.SubscriptionPlansDeleteArgs
  ): Promise<PrismaSubscriptionPlans> {
    return this.prisma.subscriptionPlans.delete(args);
  }
  async ManageSubscription(
    args: SubscriptionPlansCreateInput
  ): Promise<SubscriptionPlans> {
    throw new Error("Not implemented");
  }
}
